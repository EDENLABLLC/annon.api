language: elixir
cache:
  directories:
    - deps
    - _build
services:
  - docker
  - postgresql
addons:
  postgresql: "9.5"
  hosts:
    - httpbin.org
elixir:
  - 1.4.5
otp_release:
  - 19.3
env:
  global:
    - MIX_ENV=test
    - REQUIRE_VERSION_TAGS="true"
    - TRUNK_BRANCH="master"
    # Docker Hub token
    - DOCKER_HUB_ACCOUNT=edenlabllc
    - secure: "KCXY/H1KL3xUQJCLpE6M3rJBV2JI2Z9XzRv5PYP+iKSYntkx/m9EGVY+4UHKvzTU19Lq1I10V8Q5UsGkpbuPHeKdCeRF0F8BscQqmav85Q/NKPNSKKxq6SFyGVLr+lmER3BQkNEUMIQWWHo8chHrvwRZoAXSjDp8OXWt5nWr78hQXM3+lQZvy0OXB44bsAej4HR01vol2V3BR1by87SzLnJLjQRZbl9eWQ8L31/dvp7GHnj1Kle+dek4Kq1EOugfAnqJKSVuECbllHwF+f8kGN0ZI9XCrHxhcQF0tcAwisDbA9xrXQh/MiNbBA+YTIbktZV4477CE2oCBaULzptifZkUgC+004bxOTOrTBwx/nMuIBwhbn5TimDdH6yxLmipYnweO2G3PbE46ccfRnvl1zxpEsTm+GfOTMAT1Y8HKGNYdLO2c24BCdzd15sRA06HvbRJ1xJBAoRZxz8jY4gl/PF6zGAwzgAOR2EqAglifmm7rIj5vRy0v1Bf3FNLv2nKye4lurDQ5f/CZPoJLz5NkdLu1t+XT/7lT+tFftJu7EZEulaoIcCk38lIWToPBU/jMXcOiMlhOa72BpFptqvtf4W0x8cp60gyCz85aMHCn/q8TZDnMkEGTqBupEcp4c8Z9//LRFRKEh8RwbajxGO0CAXSnVY9jOzYnEGNlFMasOw="
    # GitHub token
    - secure: "oBqeNe/1qz5ognVswpex5VX3MWdBD0xPMYHiXQ8IU0lYooYvAR6WG4yG4UswysVzWv4SxKD/3SGpww8kYezmnx4wBbmKE7kwR+/uAFuP5y3S6QJ4ArBJwhu6XCq8UkQYZiyAwRztBcgey1WiJCuMt3JE8Pbx1J6BYPl+XO0orgGwPtCipLpF2fvqXHoWQYlKE06CRrmsTGakJOXhni5TmRVnRydt8a/4CdPbrQrGAaQ0l56KSXMHFMhKQ0KDTVRK3hlqk1zcjxSNhYhEgSLqU9TlG5MvtGOfbSLqqna8Feq+adjVvYYSqSfNDAcOCk8AWTUrOJgHbi48T6OWA1msf2LQ98nLsIDQuQgVp+2d0lK2PDaP5I6jcaeeKTsmvfsZ6YIs2r+Ulv5HW5Y9pqTd+pQNbjUaoS92zqRxNfq9vQ1jk3t9SXnHiHmsdqzw34fO2dnX3loPQuKw0zuRGmIBWw2AyYdvDolKmQveBm9BI/gphudU6iseEGO/BY9To3ocKwQSNVd5SDoQ5buv+h6jrMz3qHLAhCvaErbP+Kl0VRaLMcvHMjo+/mRXuvtTHNEXBeP0ZqCVUUeVrYvgysbMghACAi3wwS/Phadfnzsi5c2FXswz+gdBlW9tgagEMREzJDxxKLWdJo0yUg5ApJSsT+5KQj6dXLIDub83i2A3mL0="
  # Releases are generated automatically, stop infinite build loop
  except:
    - /^[0-9]*\.[0-9]*\.[0-9]*/
before_install:
  # Expose DB to Docker container
  - sudo /bin/bash ./bin/ci/init-db.sh
  # Run HTTPBin locally
  - docker pull citizenstig/httpbin:latest
  - docker run -d -p 80:8000 --name httpbin citizenstig/httpbin:latest
before_script:
  # Extract project name and version from mix.exs
  # - source ./bin/ci/release/fetch-project-environment.sh
  # Load information about new version
  # - source ./bin/ci/release/fetch-source-version.sh
  # Load information about changelog
  # - source ./bin/ci/release/fetch-changelog.sh
script:
  # Increment version in mix.exs
  - ./bin/ci/release/put-source-version.sh
  # Run all tests except pending ones
  - mix test --exclude pending --trace
  # Submit code coverage report to Coveralls
  - mix coveralls.travis --exclude pending
  # Run static code analysis
  - mix credo -a
  # Check code style
  - mix dogma
  # Build Docker container
  - ./bin/ci/release/build-container.sh
  # Initialize DB for Docker container
  - source .env; PGPASSWORD="${DB_PASSWORD}"; psql -U ${DB_USER} -w -c"CREATE DATABASE ${DB_NAME}"
  # Run Docker container
  - sudo ./bin/ci/release/start-container.sh -a '--add-host=httpbin.org:$HOST_IP'
  - sleep 5
  - docker ps
  - RUNNING_CONTAINERS=`docker ps | wc -l`;
    if [ "${RUNNING_CONTAINERS//[[:space:]]/}" == "2" ]; then
      echo "[E] Container is not started\!";
      docker logs annon_api --details --since 5h;
      exit 1;
    fi;
  # Run acceptance tests on Docker container
  - ./test/sanity-test.sh
after_failure:
  - docker logs httpbin --details --since 5h
  - docker logs annon_api --details --since 5h
after_success:
  # Rebuild docs
  - "mix docs --output docs"
  # Submit Docker container to Docker Hub and create GitHub Release by pushing tag with changelog
  - ./bin/ci/release/push-changes.sh
