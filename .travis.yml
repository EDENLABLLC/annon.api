language: elixir
cache:
  directories:
    - deps
    - _build
services:
  - docker
  - postgresql
addons:
  postgresql: "9.5"
  hosts:
    - httpbin.org
elixir:
  - 1.4.5
otp_release:
  - 19.3
env:
  global:
    - MIX_ENV=test
    - REQUIRE_VERSION_TAGS="true"
    - TRUNK_BRANCH="master"
    # Docker Hub token
    - DOCKER_HUB_ACCOUNT=edenlabllc
    - secure: "c/BJZ1aqM8NtrRCnK+Gi/tukm8nwk0Vdc8pkBDiB98wqu5ozlyzp+bXbEYzPL6ruNUgXk8Zzk3hErAmGkGKEoSt/dqi0Bd6hlrF2Xjp4kX4/bLOl+fUF01VT1CT9huX8dErqhAkNR9kvmtprnbgYsMMXwG5elLgqDR2A0TnWBtQuecIAYwDwseVsYuoeLBAO9eekF6slBOKqNO/8BtgqihmMrrY88lKn5HgOMGyKUQlNL7rDw1Hql6qlADHDNKgsl3rF5BwNNiap18yJLPD5rSVnR3xiF91D8CEh/oXAtJaoR67ufon6q5ggx5wfI/24l24OrW4kADmIAnxyR2kpZcxcDWYAtkExevM38eXADbuB9JdLg8YjC00a/4ofUzCxgSOxKZfDpr5cfwmsFrUTbMKtkypOdj6CM3P+rSZVFT8m9xd8cOjDYmXugU9O298HfPEQGZWraej8Xp5kBlsdzvgobWwBRbszc6+WJCh+nsRtNls6Jkh7oYNU/GUyvwjq12R/7JyIlksklssJH1mKvZd2OSa1Lcl4c9OoK3wyhokXILGyhVgPkaQXYNIWCD5xrvdZrtm1MON4RQN9T7Hk1fBv956WJyYDAXlmEQLREzRsB37mIODjD6RI4TpPve2KtCpi3m6lDgxRevwd/oPmhg2TtcQnLj7RVTJAB/jRnlg="
    # GitHub token
    - secure: "oBqeNe/1qz5ognVswpex5VX3MWdBD0xPMYHiXQ8IU0lYooYvAR6WG4yG4UswysVzWv4SxKD/3SGpww8kYezmnx4wBbmKE7kwR+/uAFuP5y3S6QJ4ArBJwhu6XCq8UkQYZiyAwRztBcgey1WiJCuMt3JE8Pbx1J6BYPl+XO0orgGwPtCipLpF2fvqXHoWQYlKE06CRrmsTGakJOXhni5TmRVnRydt8a/4CdPbrQrGAaQ0l56KSXMHFMhKQ0KDTVRK3hlqk1zcjxSNhYhEgSLqU9TlG5MvtGOfbSLqqna8Feq+adjVvYYSqSfNDAcOCk8AWTUrOJgHbi48T6OWA1msf2LQ98nLsIDQuQgVp+2d0lK2PDaP5I6jcaeeKTsmvfsZ6YIs2r+Ulv5HW5Y9pqTd+pQNbjUaoS92zqRxNfq9vQ1jk3t9SXnHiHmsdqzw34fO2dnX3loPQuKw0zuRGmIBWw2AyYdvDolKmQveBm9BI/gphudU6iseEGO/BY9To3ocKwQSNVd5SDoQ5buv+h6jrMz3qHLAhCvaErbP+Kl0VRaLMcvHMjo+/mRXuvtTHNEXBeP0ZqCVUUeVrYvgysbMghACAi3wwS/Phadfnzsi5c2FXswz+gdBlW9tgagEMREzJDxxKLWdJo0yUg5ApJSsT+5KQj6dXLIDub83i2A3mL0="
  # Releases are generated automatically, stop infinite build loop
  except:
    - /^[0-9]*\.[0-9]*\.[0-9]*/
before_install:
  # Expose DB to Docker container
  - sudo /bin/bash ./bin/ci/init-db.sh
  # Run HTTPBin locally
  - docker pull citizenstig/httpbin:latest
  - docker run -d -p 80:8000 --name httpbin citizenstig/httpbin:latest
before_script:
  # Extract project name and version from mix.exs
  - source ./bin/ci/release/fetch-project-environment.sh
  # Load information about new version
  - source ./bin/ci/release/fetch-source-version.sh
  # Load information about changelog
  - source ./bin/ci/release/fetch-changelog.sh
script:
  # Increment version in mix.exs
  - ./bin/ci/release/put-source-version.sh
  # Run all tests except pending ones
  - mix test --exclude pending --trace
  # Submit code coverage report to Coveralls
  - mix coveralls.travis --exclude pending
  # Run static code analysis
  - mix credo -a
  # Check code style
  - mix dogma
  # Build Docker container
  - ./bin/ci/release/build-container.sh
  # Initialize DB for Docker container
  - source .env; PGPASSWORD="${DB_PASSWORD}"; psql -U ${DB_USER} -w -c"CREATE DATABASE ${DB_NAME}"
  # Run Docker container
  - sudo ./bin/ci/release/start-container.sh -a '--add-host=httpbin.org:$HOST_IP'
  - sleep 5
  - docker ps
  - RUNNING_CONTAINERS=`docker ps | wc -l`;
    if [ "${RUNNING_CONTAINERS//[[:space:]]/}" == "2" ]; then
      echo "[E] Container is not started\!";
      docker logs annon_api --details --since 5h;
      exit 1;
    fi;
  # Run acceptance tests on Docker container
  - ./test/sanity-test.sh
after_failure:
  - docker logs httpbin --details --since 5h
  - docker logs annon_api --details --since 5h
after_success:
  # Rebuild docs
  - "mix docs --output docs"
  # Submit Docker container to Docker Hub and create GitHub Release by pushing tag with changelog
  - ./bin/ci/release/push-changes.sh
